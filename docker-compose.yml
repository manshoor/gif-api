services:
  app:
    init: true  # Add this to handle zombie processes better
    cap_add:
      - SYS_ADMIN  # This helps with Chrome's sandbox
    ulimits:
      core: 0 # This helps with Chrome's sandbox
    security_opt:
      - seccomp=unconfined  # This helps with Chrome's sandbox
    build: .
    container_name: screenshot-service
    env_file: .env
    ports:
      - "3000:3000"
    volumes:
      - ./temp_screenshots:/usr/src/app/temp_screenshots
      - ./public/gifs:/usr/src/app/public/gifs
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
      - REDIS_URL=redis
      - PUPPETEER_DISABLE_CRASHPAD=true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 45s
      timeout: 20s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: screenshot-service-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    environment:
      - REDIS_MAXMEMORY=1gb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

volumes:
  redis-data: